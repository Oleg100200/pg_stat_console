#In this file all sections are required. If some section has no parameters you can leave this section is blank.
#This file contains configuration for pg_stat_console.py. 
#pg_stat_console is main application which displays the web interface and also makes requests to the distributed nodes "pg_stat_monitor"

[sys_stat]
#Section "sys_stat" contains two required parameters: sys_stat and sys_stat_conn_str_direct
#Parameter "sys_stat" has the format compatible with SQLAlchemy, 
#see http://docs.sqlalchemy.org/en/latest/dialects/postgresql.html#module-sqlalchemy.dialects.postgresql.pypostgresql
#Parameter "sys_stat_conn_str_direct" has pypostgresql format, 
#example http://python.projects.pgfoundry.org/docs/1.1/driver.html#postgresql-open
#Port can be set to pgbouncer or directly to the database
#If you use pgbouncer you must set "ignore_startup_parameters = client_min_messages" and "pool_mode = session" in pgbouncer.ini
#Both parameters refers to one and the same base which is the centralized storage for collected statistics

sys_stat = postgresql+pypostgresql://app_user:passw@127.0.0.1:6432/sys_stat_dev
sys_stat_conn_str_direct = pq://app_user:passw@127.0.0.1:6432/sys_stat_dev

[main]
#This section contains main configuration parameters

port = 8888										#port for access to web interface from browser

pg_stat_monitor_port = 8889						#port for access to API of distributed monitors (pg_stat_monitor), 
												#host are desribed in "public.psc_nodes.node_host" and is specific for each node
												
enable_exception_catching = 1					#do disable this option to display full stack trace when exception happens
application_name = pg_stat_console				#app name for displaying in pg_stat_activity and naming log file
time_zone = Europe/Moscow						#value for query "SET timezone = '$1';"
application_max_mem = 1200						#in MB, if the value of this variable is exceeded, the application will be shut down
max_workers = 4									#number of workers for ThreadPoolExecutor
db_pool_size = 3								#number of connection to database

db_pool_recycle = 14400							#in seconds, this parameter prevents the pool from using a particular connection 
												#that has passed a certain age http://docs.sqlalchemy.org/en/latest/core/pooling.html#setting-pool-recycle
												
timezone_correct_time_backward = " - interval '0 hour'"   	#sql expression for "+ interval 'timezone_correct_time'", in case if timezone value is incorrectly
timezone_correct_time_forward = " + interval '0 hour'"		#the same as "timezone_correct_time_backward"

page_refresh_interval = 20						#in seconds, min 3, value for the timer in browser
hide_password_in_queries = t					#wipe passwords in the query to be displayed
hide_host_in_queries = t						#wipe hosts in the query to be displayed

[custom_params]
#This section contains customized parameters used on client side

application_title = "PostgreSQL Stat Console DB1"	#app title on login window and on main page
help_msg = <p>admin phone</p>						#show message on click "help" button
#demo_dt_a = "2017-01-28 12:00:00"					#uncomment this parameters for use pg_stat_console as demo service by predefined stats
#demo_dt_b = "2017-01-28 15:00:00"

[users]
#This section contains users and passwords in format: user = password

demo = password
admin = password
viewer = password

[users_rights]
#This section describes users rights. There are two types of users: admin and user

admin = admin
demo = user
viewer = user

[users_dashboards]
#For each user can be described dashboard in format: user_name = "method_name,duration=X_hours;[..]"
#where "duration" there is last hours interval

admin = getCPUStat,duration=12;getMemUsageStat,duration=4;getLog,duration=2;getDiskUtilStat,duration=24;getWriteStat,duration=5

[nodes_visibility]
#For each user can be described visibility of nodes in format: user_name = "node1, [..]"

viewer = "test node, node 2"